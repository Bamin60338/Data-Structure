#include <stdio.h>
#include <stdlib.h>
struct Node
{
    int data;
    struct Node *next;
};
void linkedListTraversal(struct Node *head){
    struct Node *ptr = head;
    do{
        printf("Element is %d\n", ptr->data);
        ptr = ptr->next;
    }while(ptr!=head);
}
 
struct Node * insertAtFirst(struct Node *head, int data)
{
    struct Node * ptr = (struct Node *) malloc(sizeof(struct Node));
    ptr->data = data;
 
    struct Node * p = head->next;
    while(p->next != head)
    {
        p = p->next;
    }
    p->next = ptr;
    ptr->next = head;
    head = ptr;
    return head;
 
}
int main()
{
    struct Node *first;
    struct Node *second;
    struct Node *third;
    struct Node *fourth;
    struct Node *fifth;
    first=(struct Node*)malloc(sizeof(struct Node));
    second=(struct Node*)malloc(sizeof(struct Node));
    third=(struct Node*)malloc(sizeof(struct Node));
    fourth=(struct Node*)malloc(sizeof(struct Node));
    fifth=(struct Node*)malloc(sizeof(struct Node));
    first->data=3;
    first->next=second;
    second->data=5;
    second->next=third;
    third->data=7;
    third->next=fourth;
    fourth->data=9;
    fourth->next=fifth;
    fifth->data=11;
    fifth->next=first;
    printf("Circular Linked list before insertion\n");
    linkedListTraversal(first);
    first = insertAtFirst(first, 54);
    first = insertAtFirst(first, 58);
    first = insertAtFirst(first, 59);
    printf("Circular Linked list after insertion\n");
    linkedListTraversal(first);
    return 0;
}

